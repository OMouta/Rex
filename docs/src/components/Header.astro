---
import RexLogo from '../assets/RexLogo.webp';
import { versions } from '../content/config';

// Define type for version info
interface VersionInfo {
  label: string;
  status: string;
  statusLabel: string;
  isDefault?: boolean;
}

// Accept the current version as a prop
interface Props {
  currentVersion?: string;
}

// Use the prop or default to the version marked as default in config
const defaultVersion = Object.entries(versions).find(
  ([_, versionInfo]) => (versionInfo as VersionInfo).isDefault
)?.[0] || 'v1.0';
const { currentVersion = defaultVersion } = Astro.props;
---

<header class="sticky top-0 z-50 bg-zinc-950/95 backdrop-blur supports-[backdrop-filter]:bg-zinc-950/60 border-b border-zinc-800">
  <div class="flex items-center justify-between px-4 lg:px-8 py-4">
    <div class="flex items-center space-x-4">
      <button
        id="mobile-menu-button"
        class="lg:hidden p-2 rounded-md text-zinc-400 hover:text-zinc-300 hover:bg-zinc-800 transition-colors"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
      <a href="/" class="flex items-center space-x-3">
        <img src={RexLogo.src} alt="Rex Logo" class="h-8 w-8" />
        <span class="text-xl font-bold text-zinc-200">Rex</span>
      </a>
    </div>
    
    <div class="flex items-center space-x-6">
      <div class="flex items-center space-x-4">
        <select 
          id="version-selector"
          class="bg-zinc-800 border border-zinc-700 rounded-lg px-3 py-2 text-sm text-zinc-300 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent"
        >
          {Object.entries(versions).map(([version, versionInfo]) => (
            <option value={version} selected={version === currentVersion}>
              {versionInfo.label} 
              {versionInfo.status !== 'stable' && ` (${versionInfo.statusLabel})`}
            </option>
          ))}
        </select>
        <a href="https://github.com/OMouta/Rex" class="text-zinc-400 hover:text-zinc-300 transition-colors">
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
          </svg>
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  // Version selector functionality - change URL to include version parameter
  document.addEventListener('DOMContentLoaded', () => {
    const versionSelector = document.getElementById('version-selector') as HTMLSelectElement;
    
    if (versionSelector) {
      versionSelector.addEventListener('change', (e) => {
        const target = e.target as HTMLSelectElement;
        const selectedVersion = target.value;
        
        // Get current URL and add/update version parameter
        const url = new URL(window.location.href);
        url.searchParams.set('version', selectedVersion);
        
        // Navigate to the same page but with the version parameter updated
        window.location.href = url.toString();
      });
    }
  });
</script>